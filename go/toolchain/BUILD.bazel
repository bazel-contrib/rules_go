package(default_visibility = ["//visibility:public"])

load(":toolchains.bzl", "declare_toolchains")

alias(
    name = "darwin",
    actual = "@bazel_tools//platforms:osx",
)

alias(
    name = "linux",
    actual = "@bazel_tools//platforms:linux",
)

alias(
    name = "freebsd",
    actual = "@bazel_tools//platforms:freebsd",
)

alias(
    name = "windows",
    actual = "@bazel_tools//platforms:windows",
)

constraint_value(
    name = "android",
    constraint_setting = "@bazel_tools//platforms:os",
)

constraint_value(
    name = "dragonfly",
    constraint_setting = "@bazel_tools//platforms:os",
)

constraint_value(
    name = "netbsd",
    constraint_setting = "@bazel_tools//platforms:os",
)

constraint_value(
    name = "openbsd",
    constraint_setting = "@bazel_tools//platforms:os",
)

constraint_value(
    name = "plan9",
    constraint_setting = "@bazel_tools//platforms:os",
)

constraint_value(
    name = "solaris",
    constraint_setting = "@bazel_tools//platforms:os",
)

alias(
    name = "arm",
    actual = "@bazel_tools//platforms:arm",
)

alias(
    name = "386",
    actual = "@bazel_tools//platforms:x86_32",
)

alias(
    name = "amd64",
    actual = "@bazel_tools//platforms:x86_64",
)

alias(
    name = "ppc64",
    actual = "@bazel_tools//platforms:ppc",
)

constraint_value(
    name = "arm64",
    constraint_setting = "@bazel_tools//platforms:cpu",
)

constraint_value(
    name = "ppc64le",
    constraint_setting = "@bazel_tools//platforms:cpu",
)

constraint_value(
    name = "mips",
    constraint_setting = "@bazel_tools//platforms:cpu",
)

constraint_value(
    name = "mipsle",
    constraint_setting = "@bazel_tools//platforms:cpu",
)

constraint_value(
    name = "mips64",
    constraint_setting = "@bazel_tools//platforms:cpu",
)

constraint_value(
    name = "mips64le",
    constraint_setting = "@bazel_tools//platforms:cpu",
)

# Version constraints
constraint_setting(name = "go_version")

constraint_setting(name = "go_minor_version")

constraint_setting(name = "go_point_version")

constraint_value(
    name = "go1",
    constraint_setting = ":go_version",
)

constraint_value(
    name = "go1.9",
    constraint_setting = ":go_minor_version",
)

constraint_value(
    name = "go1.9.1",
    constraint_setting = ":go_point_version",
)

constraint_value(
    name = "go1.9.0",
    constraint_setting = ":go_point_version",
)

constraint_value(
    name = "go1.8",
    constraint_setting = ":go_minor_version",
)

constraint_value(
    name = "go1.8.4",
    constraint_setting = ":go_point_version",
)

constraint_value(
    name = "go1.8.3",
    constraint_setting = ":go_point_version",
)

constraint_value(
    name = "go1.8.2",
    constraint_setting = ":go_point_version",
)

constraint_value(
    name = "go1.8.1",
    constraint_setting = ":go_point_version",
)

constraint_value(
    name = "go1.8.0",
    constraint_setting = ":go_point_version",
)

constraint_value(
    name = "go1.7",
    constraint_setting = ":go_minor_version",
)

constraint_value(
    name = "go1.7.6",
    constraint_setting = ":go_point_version",
)

constraint_value(
    name = "go1.7.5",
    constraint_setting = ":go_version",
)

constraint_value(
    name = "gohost",
    constraint_setting = ":go_version",
)

declare_toolchains()

# We declare these platform values just for convienence and reference
# Most projects should declare their own valid platform values with any additional constraints
platform(
    name = "android_arm",
    constraint_values = [
        ":android",
        ":arm",
    ],
)

platform(
    name = "darwin_386",
    constraint_values = [
        ":darwin",
        ":386",
    ],
)

platform(
    name = "darwin_amd64",
    constraint_values = [
        ":darwin",
        ":amd64",
    ],
)

platform(
    name = "darwin_arm",
    constraint_values = [
        ":darwin",
        ":arm",
    ],
)

platform(
    name = "darwin_arm64",
    constraint_values = [
        ":darwin",
        ":arm64",
    ],
)

platform(
    name = "dragonfly_amd64",
    constraint_values = [
        ":dragonfly",
        ":amd64",
    ],
)

platform(
    name = "freebsd_386",
    constraint_values = [
        ":freebsd",
        ":386",
    ],
)

platform(
    name = "freebsd_amd64",
    constraint_values = [
        ":freebsd",
        ":amd64",
    ],
)

platform(
    name = "freebsd_arm",
    constraint_values = [
        ":freebsd",
        ":arm",
    ],
)

platform(
    name = "linux_386",
    constraint_values = [
        ":linux",
        ":386",
    ],
)

platform(
    name = "linux_amd64",
    constraint_values = [
        ":linux",
        ":amd64",
    ],
)

platform(
    name = "linux_arm",
    constraint_values = [
        ":linux",
        ":arm",
    ],
)

platform(
    name = "linux_arm64",
    constraint_values = [
        ":linux",
        ":arm64",
    ],
)

platform(
    name = "linux_ppc64",
    constraint_values = [
        ":linux",
        ":ppc64",
    ],
)

platform(
    name = "linux_ppc64le",
    constraint_values = [
        ":linux",
        ":ppc64le",
    ],
)

platform(
    name = "linux_mips",
    constraint_values = [
        ":linux",
        ":mips",
    ],
)

platform(
    name = "linux_mipsle",
    constraint_values = [
        ":linux",
        ":mipsle",
    ],
)

platform(
    name = "linux_mips64",
    constraint_values = [
        ":linux",
        ":mips64",
    ],
)

platform(
    name = "linux_mips64le",
    constraint_values = [
        ":linux",
        ":mips64le",
    ],
)

platform(
    name = "netbsd_386",
    constraint_values = [
        ":netbsd",
        ":386",
    ],
)

platform(
    name = "netbsd_amd64",
    constraint_values = [
        ":netbsd",
        ":amd64",
    ],
)

platform(
    name = "netbsd_arm",
    constraint_values = [
        ":netbsd",
        ":arm",
    ],
)

platform(
    name = "openbsd_386",
    constraint_values = [
        ":openbsd",
        ":386",
    ],
)

platform(
    name = "openbsd_amd64",
    constraint_values = [
        ":openbsd",
        ":amd64",
    ],
)

platform(
    name = "openbsd_arm",
    constraint_values = [
        ":openbsd",
        ":arm",
    ],
)

platform(
    name = "plan9_386",
    constraint_values = [
        ":plan9",
        ":386",
    ],
)

platform(
    name = "plan9_amd64",
    constraint_values = [
        ":plan9",
        ":amd64",
    ],
)

platform(
    name = "solaris_amd64",
    constraint_values = [
        ":solaris",
        ":amd64",
    ],
)

platform(
    name = "windows_386",
    constraint_values = [
        ":windows",
        ":386",
    ],
)

platform(
    name = "windows_amd64",
    constraint_values = [
        ":windows",
        ":amd64",
    ],
)

platform(
    name = "host",
    constraint_values = [
        ":linux",
        ":amd64",
        ":gohost",
    ],
)
