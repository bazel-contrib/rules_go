load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_test(
    name = "opts_test",
    srcs = ["adder_test.go"],
    embed = [":opts"],
)

go_library(
    name = "opts",
    srcs = [
        "add.c",
        "add.cpp",
        "add.h",
        "adder.go",
    ],
    cgo = True,
    copts = ["-DRULES_GO_C"],
    cppopts = ["-DRULES_GO_CPP"],
    cxxopts = ["-DRULES_GO_CXX"],
    importpath = "github.com/bazelbuild/rules_go/tests/core/cxx",
)

go_test(
    name = "dylib_test",
    srcs = ["dylib_test.go"],
    embed = [":dylib_client"],
    rundir = ".",
)

go_library(
    name = "dylib_client",
    srcs = ["dylib_client.go"],
    cdeps = select({
        "@io_bazel_rules_go//go/platform:darwin": [":darwin_imported_dylib"],
        "//conditions:default": [":linux_imported_dylib"],
        # TODO(jayconrod): Support windows, skip others.
    }),
    cgo = True,
    importpath = "github.com/bazelbuild/rules_go/tests/core/cgo/dylib",
)

cc_import(
    name = "darwin_imported_dylib",
    shared_library = "libimported.dylib",
    tags = ["manual"],
)

genrule(
    name = "darwin_gen_imported_dylib",
    srcs = ["imported.c"],
    outs = ["libimported.dylib"],
    cmd = "$(CC) -shared -install_name @rpath/libimported.dylib $< -o $@",
    tags = ["manual"],
)

cc_import(
    name = "linux_imported_dylib",
    shared_library = "libimported.so",
    tags = ["manual"],
)

genrule(
    name = "linux_gen_imported_dylib",
    srcs = ["imported.c"],
    outs = ["libimported.so"],
    cmd = "$(CC) -shared $< -o $@",
    tags = ["manual"],
)

go_test(
    name = "race_test",
    srcs = [
        "race_off.c",
        "race_off.go",
        "race_on.c",
        "race_on.go",
        "race_test.go",
    ],
    cgo = True,
    race = "on",
)
