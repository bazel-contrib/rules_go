load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@bazel_skylib//rules:diff_test.bzl", "diff_test")
load("@io_bazel_stardoc//stardoc:stardoc.bzl", "stardoc")

_NAV_HEADER = """# Extra rules

This is a collection of helper rules. These are not core to building a go binary, but are supplied
to make life a little easier.

Contents
- [gazelle](#gazelle)
- [gomock](#gomock)
- [go_embed_data](#go_embed_data)

------------------------------------------------------------------------
"""

_NAV_FOOTER = """
  [gazelle rule]: https://github.com/bazelbuild/bazel-gazelle#bazel-rule
  [golang/mock]: https://github.com/golang/mock
  [gomock_rule]: https://github.com/jmhodges/bazel_gomock
  [core go rules]: core.rst
"""

# Workaround https://github.com/bazelbuild/stardoc/issues/25
write_file(
    name = "gen_header",
    out = "header.vm",
    content = [
        _NAV_HEADER,
        "${moduleDocstring}",
        _NAV_FOOTER,
    ],
)

_DOC_SRCS = {
    "extras:embed_data": "//go:extras.rst",
}

[
    stardoc(
        name = file.replace(":", "_") + "_doc",
        out = file.replace(":", "_") + ".md_",
        header_template = ":header.vm",
        # rule_template = ":rule.vm",
        input = "//%s.bzl" % file,
        deps = ["//" + file],
    )
    for file in _DOC_SRCS.keys()
]

[
    diff_test(
        name = "check_" + k.replace(":", "/"),
        file1 = k.replace(":", "_") + ".md_",
        file2 = v,
    )
    for [
        k,
        v,
    ] in _DOC_SRCS.items()
]

write_file(
    name = "gen_update",
    out = "update.sh",
    content = [
        "#!/bin/sh",
        "cd $BUILD_WORKSPACE_DIRECTORY",
    ] + [
        "cp -fv bazel-bin/docs/{0} {1}".format(
            k.replace(":", "_") + ".md_",
            v[2:].replace(":", "/").replace(".rst", ".md"),
        )
        for [
            k,
            v,
        ] in _DOC_SRCS.items()
    ],
)

sh_binary(
    name = "update",
    srcs = ["update.sh"],
    data = [k.replace(":", "_") + ".md_" for k in _DOC_SRCS.keys()],
)
